TestCase subclass: #AlgoFixTest	instanceVariableNames: 'precision'	classVariableNames: ''	package: 'TP1-Test'!!AlgoFixTest methodsFor: 'running' stamp: 'tomas 5/12/2020 16:14'!setUp	precision := 0.001! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:21'!test06PresupuestoPinteoresConPincelUtilizanDiferentesPinturasOfreceElMenorPresupuesto	| algoFix venier presupuesto valorEsperadoConVenier |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo		- Venier requiere '2' manos con pincel y '1' con rodillo	"	algoFix registrarPintorDePincel: 'Martin' conValorHora: 500.	algoFix registrarPintorDePincel: 'Sebastian' conValorHora: 600.	venier := algoFix crearPintura: 'Venier' conPrecioPorLitro: 150 manosPincel: 2 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 15 conPintura: venier.		valorEsperadoConVenier := algoFix 		manoDeObra: 			(15 "M2" * 2 "horas" * 500 "Precio" * 2 "manos") 		masMateriales: 			(15 "M2" * 4 "litros" * 150 "Precio" * 2 "manos").	self assert: 'Martin' equals: (presupuesto responsable).	self assert: valorEsperadoConVenier closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:20'!test01PresupuestoPintorUtilizaPincelConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba  presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda 2 horas en pintar un M2 (metro cuadrado), 	"	"Consumo de material:		- Para pincel cada M2 lleva 4 litros de pintura	"	"Pinturas:		- Alba   requiere '1' mano con pincel y '1' mano con rodillo	"	algoFix registrarPintorDePincel: 'Diego' conValorHora: 500.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperado := algoFix		manoDeObra: 			(5 "M2" * 2 "horas" * 500 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Diego' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:20'!test02PresupuestoPintoresUtilizandoPincelConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura	"		"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDePincel: 'Diego' conValorHora: 500.	algoFix registrarPintorDePincel: 'Eugenio' conValorHora: 450.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 150 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 10 conPintura: alba.	valorEsperado := algoFix  		manoDeObra: 			(10 "M2" * 2 "horas" * 450 "Precio" * 1 "manos") 		masMateriales: 			(10 "M2" * 4 "litros" * 150 "Precio" * 1 "manos").	self assert: 'Eugenio' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 's 5/22/2020 16:12'!test08PresupuestoConTecnicaPincel	| algoFix alba venier presupuesto valorEsperadoConAlba valorEsperadoConVenier |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo		- Venier requiere '2' manos con pincel y '1' con rodillo	"	algoFix registrarPintorDePincel: 'Edson' conValorHora: 500.	algoFix registrarPintorDeRodillo: 'Edson' conValorHora: 200.	algoFix registrarPintorDeRodillo: 'Pablo' conValorHora: 800.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	venier := algoFix crearPintura: 'Venier' conPrecioPorLitro: 150 manosPincel: 2 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperadoConAlba := algoFix 		manoDeObra: 			(5 "M2" * 1 "horas" * 200 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Edson' equals: (presupuesto responsable).	self assert: valorEsperadoConAlba closeTo: (presupuesto valor) precision: precision.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: venier.	valorEsperadoConVenier := algoFix 		manoDeObra: 			(5 "M2" * 1 "horas" * 200 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 150 "Precio" * 1 "manos").	self assert: 'Edson' equals: (presupuesto responsable).	self assert: valorEsperadoConVenier closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:23'!test05PresupuestoPinteoresConPincelRodilloOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDePincel: 'Pablo' conValorHora: 500.	algoFix registrarPintorDeRodillo: 'Edson' conValorHora: 800.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 340 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 20 conPintura: alba.	valorEsperado := algoFix 		manoDeObra: 			(20 "M2" * 2 "horas" * 500 "Precio" * 1 "manos") 		masMateriales: 			(20 "M2" * 4 "litros" * 340 "Precio" * 1 "manos").	self assert: 'Pablo' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 's 5/22/2020 13:49'!test07PresupuestoPinteoresConPincelUtilizanDiferentesPinturasHacenDescuendoDel50PorcientoEnMoCuandoM2EsMayor40EntoncesOfreceElMenorPresupuesto	| algoFix venier presupuesto valorEsperadoConVenier |	algoFix := AlgoFix new.	"Tecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado), 	"	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para pincel cada M2 lleva '4' litros de pintura		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo		- Venier requiere '2' manos con pincel y '1' con rodillo	"	algoFix registrarPintorDePincel: 'Pablo' conValorHora: 500.	algoFix registrarPintorDePincel: 'Eugenio' conValorHora: 600.	algoFix registrarPintorDeRodillo: 'Tomas' conValorHora: 4000.	venier := algoFix crearPintura: 'Venier' conPrecioPorLitro: 150 manosPincel: 2 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 55 conPintura: venier.		"El descuento del %50 lo hacen los pintores con pincel!!"	valorEsperadoConVenier := algoFix  		manoDeObra: 			(55 "M2" * 2 "horas" * 500 "Precio" * 2 "manos" * 0.5) 		masMateriales: 			(55 "M2" * 4 "litros" * 150 "Precio" * 2 "manos").	self assert: 'Pablo' equals: (presupuesto responsable).	self assert: valorEsperadoConVenier closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 's 5/23/2020 18:03'!test03PresupuestoPintorUtilizaRodilloConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDeRodillo: 'Diego' conValorHora: 200.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperado := algoFix  		manoDeObra: 			(5 "M2" * 1 "horas" * 200 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Diego' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !!AlgoFixTest methodsFor: 'tests' stamp: 'tomas 5/12/2020 17:20'!test04PresupuestoPintoresUtilizandoRodilloConPinturaAlbaOfreceElMenorPresupuesto	| algoFix alba presupuesto valorEsperado |	algoFix := AlgoFix new.	"Tecnica rodillo:		- Se tarda '1' horas en pintar un M2, 	"	"Consumo de material:		- Para rodillo cada M2 lleval '5 litros de pintura 	"	"Pinturas:		- Alba   requiere '1' mano  con pincel y '1' mano rodillo	"	algoFix registrarPintorDeRodillo: 'Diego' conValorHora: 200.	algoFix registrarPintorDeRodillo: 'Eugenio' conValorHora: 130.	alba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 20 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: alba.	valorEsperado := algoFix 		manoDeObra: 			(5 "M2" * 1 "horas" * 130 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 5 "litros" * 20 "Precio" * 1 "manos").	self assert: 'Eugenio' equals: (presupuesto responsable).	self assert: valorEsperado closeTo: (presupuesto valor) precision: precision.! !TestCase subclass: #HabilidadPincelTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Test'!!HabilidadPincelTest commentStamp: 's 5/28/2020 01:07' prior: 0!This class contains testsHabilidad pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado)		- Para pincel cada M2 lleva '4' litros de pintura !!HabilidadPincelTest methodsFor: 'tests' stamp: 's 5/28/2020 00:49'!test02HabilidadPincelAplicaDescuentoSiMetros2EsMayorA40	| habilidadPincel valorTotal valorEsperado pinturaAlba|		habilidadPincel:= HabilidadPincel new.	pinturaAlba := Pintura inicializarConNombre: 'Alba' conPrecioPorLitro: 200 cantManosPincel: 4 cantManosRodillo: 1.		valorTotal:= habilidadPincel  calcularPrecioconMetros2: 50 conValorHora: 30 conPintura: pinturaAlba.	valorEsperado:= ((50 "metros" * 30 "valorHora" * 2"horas" * 4"manos")*0.5) + (50 "metros" * 200"precio" * 4 "litros" * 4"manos").		self assert: valorEsperado  equals: (valorTotal).! !!HabilidadPincelTest methodsFor: 'tests' stamp: 's 5/28/2020 00:49'!test01HabilidadPincelCalculaElvalorTotalDeManodeObraYMateriales	| habilidadPincel valorTotal valorEsperado pinturaAlba|		habilidadPincel:= HabilidadPincel new.	pinturaAlba := Pintura inicializarConNombre: 'Alba' conPrecioPorLitro: 200 cantManosPincel: 4 cantManosRodillo: 1.		valorTotal:= habilidadPincel  calcularPrecioconMetros2: 10 conValorHora: 30 conPintura: pinturaAlba.	valorEsperado:= (10 "metros" * 30 "valorHora" * 2"horas" * 4"manos") + (10 "metros" * 200"precio" * 4 "litros" * 4"manos").		self assert: valorEsperado  equals: (valorTotal).! !TestCase subclass: #HabilidadRodilloTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Test'!!HabilidadRodilloTest commentStamp: 's 5/28/2020 01:07' prior: 0!This class contains testsHabilidad rodillo:		- Se tarda '1' horas en pintar un M2, 		- Para rodillo cada M2 lleva '5' litros de pintura !!HabilidadRodilloTest methodsFor: 'tests' stamp: 's 5/28/2020 00:52'!test02HabilidadRodilloAplicaUnDescuentoDel0Porciento	| habilidadrodillo valorTotal valorEsperado pinturaAlba|		habilidadrodillo:= HabilidadRodillo new.	pinturaAlba := Pintura inicializarConNombre: 'Alba' conPrecioPorLitro: 200 cantManosPincel: 4 cantManosRodillo: 1.		valorTotal:= habilidadrodillo calcularPrecioconMetros2: 50 conValorHora: 30 conPintura: pinturaAlba.	valorEsperado:= ((50 "metros" * 30 "valorHora" * 1"horas" * 1"manos")) + (50 "metros" * 200"precio" * 5 "litros" * 1"manos").		self assert: valorEsperado  equals: (valorTotal).! !!HabilidadRodilloTest methodsFor: 'tests' stamp: 's 5/28/2020 00:49'!test01HabilidadRodilloCalculaElvalorTotalDeManodeObraYMateriales	|habilidadRodillo valorTotal valorEsperado pinturaAlba|		habilidadRodillo := HabilidadRodillo new.	pinturaAlba := Pintura inicializarConNombre: 'Alba' conPrecioPorLitro: 100  cantManosPincel: 3  cantManosRodillo: 2.		valorTotal := habilidadRodillo calcularPrecioconMetros2: 10 conValorHora: 30  conPintura: pinturaAlba.	valorEsperado:= (10"metros"* 30"precioporhora" * 1"hora" * 2 "manos") + (10"metros"* 100 "precio pintura" * 2"manos" * 5"Litros").		self assert: valorTotal equals: valorEsperado! !TestCase subclass: #MyAlgoFixTest	instanceVariableNames: 'algoFix'	classVariableNames: ''	package: 'TP1-Test'!!MyAlgoFixTest methodsFor: 'running' stamp: 's 5/23/2020 21:56'!setUp	algoFix := AlgoFix new.! !!MyAlgoFixTest methodsFor: 'tests' stamp: 's 5/23/2020 22:00'!test02NoPuedoPedirPresupuestoSiNoLePasoUnaPinturaValida	algoFix registrarPintorDePincel: 'Pepe' conValorHora: 20.		self should: [ 		algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 10 conPintura: nil.	]raise: PinturaEsNilError.! !!MyAlgoFixTest methodsFor: 'tests' stamp: 's 5/23/2020 22:40'!test03NoPuedoRegistrarUnaPinturaSinNombre	self should: [ 		algoFix crearPintura: nil conPrecioPorLitro: 35 manosPincel: 1 manosRodillo: 2.	]raise: NoSeRecibioUnNombreError.! !!MyAlgoFixTest methodsFor: 'tests' stamp: 's 5/23/2020 22:40'!test05NoPuedoRegistrarUnPintorDeRodilloSinNombre	self should: [ 		algoFix registrarPintorDeRodillo: nil conValorHora: 20.	]raise: NoSeRecibioUnNombreError.! !!MyAlgoFixTest methodsFor: 'tests' stamp: 's 5/28/2020 21:28'!test06RegistroPintorDePincelPresupuestoMeLoDevuelve	| pinturaAlba  presupuesto valorEsperado |	algoFix := AlgoFix new.		algoFix registrarPintorDePincel: 'Diego' conValorHora: 500.	pinturaAlba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: pinturaAlba.	valorEsperado := algoFix		manoDeObra: 			(5 "M2" * 2 "horas" * 500 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Diego' equals: (presupuesto responsable).	self assert: valorEsperado equals: (presupuesto valor).! !!MyAlgoFixTest methodsFor: 'tests' stamp: 's 5/28/2020 21:28'!test08RegistroPintoresConDistintoNombreConIgualValorYPresuepuestoMeDevuelveElPrimero	| pinturaAlba  presupuesto valorEsperado |	algoFix := AlgoFix new.		algoFix registrarPintorDePincel: 'Ruperto' conValorHora: 100.	algoFix registrarPintorDePincel: 'Fer' conValorHora: 100.	algoFix registrarPintorDePincel: 'Diego' conValorHora: 100.	algoFix registrarPintorDePincel: 'siorino' conValorHora: 100.	algoFix registrarPintorDePincel: 'bruma' conValorHora: 100.		pinturaAlba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: pinturaAlba.	valorEsperado := algoFix		manoDeObra: 			(5 "M2" * 2 "horas" * 100 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Ruperto' equals: (presupuesto responsable).	self assert: valorEsperado equals: (presupuesto valor).! !!MyAlgoFixTest methodsFor: 'tests' stamp: 's 5/23/2020 21:57'!test01NoPuedoPedirPresupuestoSiNoRegistreNingunPintor| pinturaAlba |	pinturaAlba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 150 manosPincel: 1 manosRodillo: 1.	self should: [ 		algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 10 conPintura: pinturaAlba.	]raise: NoHayPintoresRegistradosError.! !!MyAlgoFixTest methodsFor: 'tests' stamp: 's 5/28/2020 21:28'!test09SePuedeRegistrarUnPintorQueTrabajeGratisYPresupuestoMinMeLoDevuelve	| pinturaAlba  presupuesto valorEsperado |	algoFix := AlgoFix new.		algoFix registrarPintorDePincel: 'Jorge' conValorHora: 100.	algoFix registrarPintorDePincel: 'Matias' conValorHora: 0.		pinturaAlba := algoFix crearPintura: 'Alba' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: pinturaAlba.	valorEsperado := algoFix		manoDeObra: 			0		masMateriales: 			(5 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Matias' equals: (presupuesto responsable).	self assert: valorEsperado equals: (presupuesto valor).! !!MyAlgoFixTest methodsFor: 'tests' stamp: 's 5/23/2020 22:39'!test04NoPuedoRegistrarUnPintorDePincelSinNombre	self should: [ 		algoFix registrarPintorDePincel: nil conValorHora: 20.	]raise: NoSeRecibioUnNombreError.! !!MyAlgoFixTest methodsFor: 'tests' stamp: 's 5/28/2020 21:28'!test07Registro2PintoresConElMismoNombrePeroDistintoValorYPresuepuestoMeDevuelveElMin	| pinturaCielo  presupuesto valorEsperado |	algoFix := AlgoFix new.		algoFix registrarPintorDePincel: 'Diego' conValorHora: 500.	algoFix registrarPintorDePincel: 'Diego' conValorHora: 100.		pinturaCielo := algoFix crearPintura: 'Cielo' conPrecioPorLitro: 200 manosPincel: 1 manosRodillo: 1.	presupuesto := 	algoFix presupuestoMasBaratoParaPintarMetrosCuadrados: 5 conPintura: pinturaCielo.	valorEsperado := algoFix		manoDeObra: 			(5 "M2" * 2 "horas" * 100 "Precio" * 1 "manos") 		masMateriales: 			(5 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").	self assert: 'Diego' equals: (presupuesto responsable).	self assert: valorEsperado equals: (presupuesto valor).! !TestCase subclass: #PintorTest	instanceVariableNames: 'pinturaAlba'	classVariableNames: ''	package: 'TP1-Test'!!PintorTest methodsFor: 'running' stamp: 's 5/28/2020 00:49'!setUp	pinturaAlba := Pintura inicializarConNombre: 'Alba' conPrecioPorLitro: 200 cantManosPincel: 1 cantManosRodillo: 1.! !!PintorTest methodsFor: 'tests' stamp: 's 5/28/2020 21:26'!test02CuandoCreoUnPintorMeDevuelveUnPintorConValorHora	|pintor habilidadpincel|		habilidadpincel:= HabilidadPincel new.		pintor:= Pintor inicializarConNombre: 'nico' conValorHora: 100 conHabilidad: habilidadpincel.		self assert: 100 equals: (pintor valorHora).	! !!PintorTest methodsFor: 'tests' stamp: 's 5/28/2020 21:27'!test01CuandoCreoUnPintorMeDevuelveUnPintorConNombre	|pintor habilidadpincel|		habilidadpincel:= HabilidadPincel new.		pintor:= Pintor inicializarConNombre: 'nico' conValorHora: 100 conHabilidad: habilidadpincel.		self assert: 100 equals: (pintor valorHora).	! !!PintorTest methodsFor: 'tests' stamp: 's 5/28/2020 21:26'!test03ElPintorMeDevuelveElValorTotalEsperado	|pintor habilidadpincel valortotal valoresperado|		habilidadpincel := HabilidadPincel new.	pintor := Pintor inicializarConNombre: 'nico' conValorHora: 100 conHabilidad: habilidadpincel.		valortotal := pintor calcularPresupuestoConM2:5 conPintura: pinturaAlba.		valoresperado := (5"M2" * 2 "horas" * 100 "Precio" * 1 "manos")						  +(5 "M2" * 4 "litros" * 200 "Precio" * 1 "manos").		self assert: valoresperado  equals: (valortotal).! !TestCase subclass: #PinturaTest	instanceVariableNames: 'unPrecio'	classVariableNames: ''	package: 'TP1-Test'!!PinturaTest methodsFor: 'tests' stamp: 's 5/28/2020 00:49'!test01PinturaMeDaLaCantDeManosPintor	| pintura |	pintura:= Pintura inicializarConNombre: 'Alba' conPrecioPorLitro: 50 cantManosPincel: 5 cantManosRodillo: 2.		self assert: 5 equals: (pintura cantManosPincel).! !!PinturaTest methodsFor: 'tests' stamp: 's 5/28/2020 00:49'!test02PinturaMeDaLaCantDeManosRodillo	| pintura |	pintura:= Pintura inicializarConNombre: 'Alba' conPrecioPorLitro: 50 cantManosPincel: 5 cantManosRodillo: 2.		self assert: 2 equals: (pintura cantManosRodillo).! !!PinturaTest methodsFor: 'tests' stamp: 's 5/28/2020 00:49'!test03pinturaCalculaPrecioPorLitroYCantDeManosRodillo	| pintura |	pintura:= Pintura inicializarConNombre: 'Alba' conPrecioPorLitro: 50 cantManosPincel: 1 cantManosRodillo: 2.		self assert: 50 equals: (pintura precioPorLitro).! !TestCase subclass: #PresupuestoTest	instanceVariableNames: 'pintorPincel otroPintorPincel pintorRodillo otroPintorRodillo unaPintura pintores'	classVariableNames: ''	package: 'TP1-Test'!!PresupuestoTest commentStamp: 's 5/23/2020 17:03' prior: 0!This class contains testsTecnica pincel: 		- Se tarda '2' horas en pintar un M2 (metro cuadrado)		- Para pincel cada M2 lleva '4' litros de pinturaTecnica rodillo:		- Se tarda '1' horas en pintar un M2, 		- Para rodillo cada M2 lleva '5' litros de pintura !!PresupuestoTest methodsFor: 'running' stamp: 's 5/28/2020 01:04'!setUp| habilidadpincel habilidadRodillo |	habilidadpincel := HabilidadPincel new.	habilidadRodillo := HabilidadRodillo new.		unaPintura := Pintura inicializarConNombre: 'Alba' conPrecioPorLitro: 200 cantManosPincel: 1 cantManosRodillo: 1.		pintorPincel := Pintor inicializarConNombre: 'Pepito' conValorHora:400 conHabilidad: habilidadpincel.	otroPintorPincel := Pintor inicializarConNombre: 'Pablito' conValorHora:100 conHabilidad: habilidadpincel.		pintorRodillo := Pintor inicializarConNombre: 'Roberto' conValorHora:500 conHabilidad: habilidadRodillo.	otroPintorRodillo := Pintor inicializarConNombre: 'Ramiro' conValorHora:1000 conHabilidad: habilidadRodillo.		pintores := OrderedCollection new.! !!PresupuestoTest methodsFor: 'tests' stamp: 's 5/28/2020 01:04'!test02PresupuestoResponsableDevuelveElNombreDeUnpintorCuyoPresupuestoEsMin	|unpresupuesto|		pintores add: pintorPincel.	pintores add: otroPintorPincel.		unpresupuesto:= Presupuesto new.	unpresupuesto:= unpresupuesto menorPresupuestoConPintores: pintores conPintura: unaPintura  conmetros: 2.		self assert: 'Pablito' equals: (unpresupuesto responsable).! !!PresupuestoTest methodsFor: 'tests' stamp: 's 5/28/2020 21:27'!test05PresupuestoHaceDescuentoSiM2esMayorA40APintoresDePincel	|unpresupuesto valoresperado|		pintores add: pintorPincel.	pintores add: otroPintorPincel. 	unpresupuesto:= Presupuesto new.		unpresupuesto:= unpresupuesto menorPresupuestoConPintores: pintores conPintura: unaPintura  conmetros: 41.	valoresperado:= ((41"M2" * 2 "horas" * 100 "Precio" * 1 "manos")*0.5 "descuento")+(41 "M2" * 4 "litros" * 200 "Precio" * 1 "manos"). "3200"		self assert:  valoresperado equals: (unpresupuesto valor).! !!PresupuestoTest methodsFor: 'tests' stamp: 's 5/28/2020 01:03'!test04PresupuestoValorDevuelveElValordelMenorPresupuesto	|unpresupuesto valorconPintorRodillo|		pintores add: pintorPincel.	pintores add: pintorRodillo. 	unpresupuesto:= Presupuesto new.		unpresupuesto:= unpresupuesto menorPresupuestoConPintores: pintores conPintura: unaPintura  conmetros: 2.	"valor con pintor pincel = 3200"	valorconPintorRodillo:= (2"M2" * 1 "horas" * 500 "Precio" * 1 "manos")+(2 "M2" * 5 "litros" * 200 "Precio" * 1 "manos"). "=3000"		self assert:  valorconPintorRodillo equals: (unpresupuesto valor).! !!PresupuestoTest methodsFor: 'tests' stamp: 's 5/28/2020 01:03'!test03PresupuestoValorDevuelveElValordelpresupuesto	|unpresupuesto valorconPintorPincel|		pintores add: pintorPincel.	unpresupuesto:= Presupuesto new.		unpresupuesto:= unpresupuesto menorPresupuestoConPintores: pintores conPintura: unaPintura  conmetros: 2.	valorconPintorPincel:= (2"M2" * 2 "horas" * 400 "Precio" * 1 "manos")+(2 "M2" * 4 "litros" * 200 "Precio" * 1 "manos"). "3200"		self assert:  valorconPintorPincel equals: (unpresupuesto valor).! !!PresupuestoTest methodsFor: 'tests' stamp: 's 5/28/2020 01:03'!test01PresupuestoResponsableDevuelveElNombreDeUnPintor	|unpresupuesto|		pintores add: pintorPincel.		unpresupuesto:= Presupuesto new.	unpresupuesto:= unpresupuesto menorPresupuestoConPintores: pintores conPintura: unaPintura  conmetros: 2.		self assert: 'Pepito' equals: (unpresupuesto responsable).! !!PresupuestoTest methodsFor: 'tests' stamp: 's 5/23/2020 16:11'!test06PresupuestoNoHaceDescuentoPorMetros2MayoresA40ParaPintorDeRodillo	|unpresupuesto valorSinDescuento|		pintores add: pintorRodillo. 	unpresupuesto:= Presupuesto new.	unpresupuesto:= unpresupuesto menorPresupuestoConPintores: pintores conPintura: unaPintura  conmetros: 41.	valorSinDescuento:= (41"M2" * 1 "horas" * 500 "Precio" * 1 "manos")+(41 "M2" * 5 "litros" * 200 "Precio" * 1 "manos"). 		self assert: valorSinDescuento equals: (unpresupuesto valor).! !