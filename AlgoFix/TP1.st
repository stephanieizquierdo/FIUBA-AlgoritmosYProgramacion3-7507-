Object subclass: #AlgoFix	instanceVariableNames: 'pintores habilidadPincel habilidadRodillo'	classVariableNames: 'NoRegistrePintores'	package: 'TP1'!!AlgoFix commentStamp: 's 5/23/2020 21:11' prior: 0!AlgoFix!!AlgoFix methodsFor: 'initialization' stamp: 'stephi 5/22/2020 02:14'!initialize 	pintores:= OrderedCollection new.	habilidadPincel := HabilidadPincel new.	habilidadRodillo := HabilidadRodillo new.	! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 's 5/19/2020 02:50'!manoDeObra: precioMano masMateriales: precioMateriales	^(precioMano + precioMateriales)! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 's 5/28/2020 00:49'!registrarPintorDeRodillo: unNombre conValorHora: unaHora	unNombre ifNil: [(NoSeRecibioUnNombreError new)signal].		pintores add: (Pintor inicializarConNombre: unNombre conValorHora: unaHora conHabilidad: habilidadRodillo)! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 's 5/28/2020 00:49'!crearPintura: nombre conPrecioPorLitro: unPrecio manosPincel: cantManosPincel manosRodillo: cantManosRodillo		nombre ifNil: [(NoSeRecibioUnNombreError new)signal].			^(Pintura inicializarConNombre: nombre conPrecioPorLitro: unPrecio cantManosPincel: cantManosPincel cantManosRodillo: cantManosRodillo)! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 's 5/28/2020 21:13'!presupuestoMasBaratoParaPintarMetrosCuadrados: metros2 conPintura: unaPintura| presupuesto |	(pintores isEmpty) ifTrue: [ (NoHayPintoresRegistradosError new) signal].	unaPintura ifNil: [ (PinturaEsNilError new) signal].		presupuesto:= Presupuesto new.	^(presupuesto menorPresupuestoConPintores: pintores conPintura: unaPintura conmetros: metros2)! !!AlgoFix methodsFor: 'as yet unclassified' stamp: 's 5/28/2020 00:49'!registrarPintorDePincel: unNombre conValorHora: unValor	unNombre ifNil: [(NoSeRecibioUnNombreError new)signal].		pintores add: (Pintor inicializarConNombre: unNombre conValorHora: unValor conHabilidad: habilidadPincel)! !Object subclass: #Habilidad	instanceVariableNames: 'tiempoPintarM2EnHoras cantPinturaPorM2'	classVariableNames: ''	package: 'TP1'!!Habilidad commentStamp: 's 5/28/2020 01:05' prior: 0!Habilidad!!Habilidad methodsFor: 'abstract' stamp: 's 5/26/2020 23:54'!obtenerManosCorrespondientes: unapintura	self subclassResponsibility.! !!Habilidad methodsFor: 'abstract' stamp: 's 5/26/2020 23:54'!aplicarDescuentoEnPrecio: unValor paraM2: metros2	self subclassResponsibility.! !!Habilidad methodsFor: 'calculations' stamp: 's 5/26/2020 23:55'!calcularPrecioconMetros2: metros2 conValorHora: valorHora conPintura: unapintura|valorManoObra valorMateriales manos|		manos:= self obtenerManosCorrespondientes: unapintura.		valorManoObra:= metros2 * tiempoPintarM2EnHoras * valorHora * manos.		valorMateriales:= metros2 * cantPinturaPorM2 * (unapintura precioPorLitro) * manos.		valorManoObra:= self aplicarDescuentoEnPrecio: valorManoObra paraM2: metros2.		^valorManoObra + valorMateriales.! !Habilidad subclass: #HabilidadPincel	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!HabilidadPincel commentStamp: 's 5/28/2020 01:07' prior: 0!Habilidad Pincel	- Se tarda '2' horas en pintar un M2 (metro cuadrado)	- Para pincel cada M2 lleva '4' litros de pintura!!HabilidadPincel methodsFor: 'initalize' stamp: 's 5/26/2020 23:55'!initialize	tiempoPintarM2EnHoras := 2.	cantPinturaPorM2 := 4! !!HabilidadPincel methodsFor: 'calculations' stamp: 's 5/24/2020 22:08'!obtenerManosCorrespondientes: unapintura	^unapintura cantManosPincel.! !!HabilidadPincel methodsFor: 'calculations' stamp: 's 5/26/2020 23:53'!aplicarDescuentoEnPrecio: unValor paraM2: metros2	(metros2>40) ifTrue: [^unValor*0.5].		^unValor! !Habilidad subclass: #HabilidadRodillo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!HabilidadRodillo commentStamp: 's 5/28/2020 01:07' prior: 0!Habilidad rodillo:		- Se tarda '1' horas en pintar un M2, 		- Para rodillo cada M2 lleva '5' litros de pintura !!HabilidadRodillo methodsFor: 'initialize' stamp: 's 5/26/2020 23:55'!initialize	tiempoPintarM2EnHoras := 1.	cantPinturaPorM2 := 5! !!HabilidadRodillo methodsFor: 'calculations' stamp: 's 5/24/2020 22:08'!obtenerManosCorrespondientes: unapintura	^unapintura cantManosRodillo.! !!HabilidadRodillo methodsFor: 'calculations' stamp: 's 5/24/2020 22:17'!aplicarDescuentoEnPrecio: unValor paraM2: metros2	^unValor.! !Error subclass: #NoHayPintoresRegistradosError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!NoHayPintoresRegistradosError commentStamp: 's 5/28/2020 01:07' prior: 0!Excepcion!Error subclass: #NoSeRecibioUnNombreError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!NoSeRecibioUnNombreError commentStamp: 's 5/28/2020 01:08' prior: 0!Excepcion!Object subclass: #Pintor	instanceVariableNames: 'nombre valorHora habilidad'	classVariableNames: ''	package: 'TP1'!!Pintor commentStamp: 's 5/28/2020 01:08' prior: 0!Pintor!!Pintor methodsFor: 'accesing' stamp: 's 5/26/2020 23:52'!nombre: unNombre yValorHora: unValor yconhabilidad: unaHabilidad.	nombre := unNombre.	valorHora := unValor.	habilidad := unaHabilidad.! !!Pintor methodsFor: 'accesing' stamp: 's 5/26/2020 23:52'!nombre	^nombre! !!Pintor methodsFor: 'accesing' stamp: 's 5/26/2020 23:52'!valorHora	^valorHora! !!Pintor methodsFor: 'calculations' stamp: 's 5/28/2020 00:45'!calcularPresupuestoConM2: metros2 conPintura:unapintura	^habilidad calcularPrecioconMetros2: metros2 conValorHora: valorHora conPintura: unapintura.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintor class	instanceVariableNames: ''!!Pintor class methodsFor: 'as yet unclassified' stamp: 's 5/28/2020 00:49'!inicializarConNombre: unNombre conValorHora: unValor conHabilidad: unaHabilidad	|pintor|	pintor:= self new.	pintor nombre: unNombre yValorHora: unValor yconhabilidad: unaHabilidad.	^pintor! !Object subclass: #Pintura	instanceVariableNames: 'nombre precioPorLitro cantManosPincel cantManosRodillo'	classVariableNames: ''	package: 'TP1'!!Pintura commentStamp: 's 5/28/2020 01:08' prior: 0!Pintura!!Pintura methodsFor: 'initialization' stamp: 's 5/28/2020 02:16'!nombre: aString precioPorLitro: anInteger cantManosPincel: manoPincel cantManosRodillo: manoRodillo	nombre := aString.	precioPorLitro := anInteger.	cantManosPincel := manoPincel.	cantManosRodillo := manoRodillo.! !!Pintura methodsFor: 'accesing' stamp: 's 5/26/2020 23:52'!cantManosRodillo	^cantManosRodillo! !!Pintura methodsFor: 'accesing' stamp: 's 5/23/2020 16:51'!cantManosPincel	^cantManosPincel! !!Pintura methodsFor: 'calculations' stamp: 's 5/24/2020 21:42'!precioPorLitro	^(precioPorLitro)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintura class	instanceVariableNames: ''!!Pintura class methodsFor: 'as yet unclassified' stamp: 's 5/28/2020 02:16'!inicializarConNombre: unNombre conPrecioPorLitro: unPrecio cantManosPincel: manoPincel cantManosRodillo: manoRodillo 	|pintura|	pintura:= self new.	pintura nombre: unNombre precioPorLitro: unPrecio cantManosPincel: manoPincel cantManosRodillo: manoRodillo.		^pintura! !Error subclass: #PinturaEsNilError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!PinturaEsNilError commentStamp: 's 5/28/2020 01:08' prior: 0!excepcion!Object subclass: #Presupuesto	instanceVariableNames: 'pintorMasBarato valorTotal'	classVariableNames: ''	package: 'TP1'!!Presupuesto commentStamp: 's 5/23/2020 17:07' prior: 0!Presupuesto!!Presupuesto methodsFor: 'getters' stamp: 's 5/27/2020 00:04'!responsable	^(pintorMasBarato nombre)! !!Presupuesto methodsFor: 'getters' stamp: 'stephi 5/22/2020 02:10'!valor ^valorTotal ! !!Presupuesto methodsFor: 'setters' stamp: 's 5/27/2020 00:04'!inicializarConPintor: pintor yconValorTotal: valor	pintorMasBarato := pintor.	valorTotal := valor.! !!Presupuesto methodsFor: 'calculations' stamp: 's 5/28/2020 00:45'!menorPresupuestoConPintores: pintores conPintura: unapintura conmetros: metros2	| pintor valor |	pintor:= pintores detectMin:[:unpintor | unpintor calcularPresupuestoConM2: metros2 conPintura: unapintura].		valor:= pintor calcularPresupuestoConM2: metros2 conPintura:unapintura.		self inicializarConPintor: pintor yconValorTotal: valor.		^self! !